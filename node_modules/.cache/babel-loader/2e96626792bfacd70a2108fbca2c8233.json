{"ast":null,"code":"var _jsxFileName = \"/Users/ming/Documents/GitHub/MonitorSystem_React/src/components/event/EventList.js\";\nimport React from \"react\";\nimport ViewToogleBtnGrp from \"./ViewToogleBtnGrp\";\n\nfunction EventList(props) {\n  const handleTitle = () => {\n    if (props.type === \"general\") return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5\n      },\n      __self: this\n    }, \"MAIN (\", props.theLength, \")\");else if (props.type === \"possess\") return \"OWN\";else if (props.type === \"track\") return \"TRACK\";\n  };\n\n  const getNumber = () => {\n    if (props.type === \"general\") return 1;else if (props.type === \"possess\") return 2;else if (props.type === \"track\") return 3;\n  };\n\n  const renderCollapse = () => {\n    return React.createElement(\"div\", {\n      className: \"py-1 btn btn-lg  btn-outline-secondary\",\n      \"data-toggle\": \"collapse\",\n      href: \"#collapse\" + props.type + \"Queue\" // aria-disabled={props.theLength === 0 ? true : false}\n      // style={props.theLength === 0 ? { color: \"gray\" } : { color: \"#0000cc\" }}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, handleTitle());\n  };\n\n  const renderTitle = () => {\n    if (props.collapse) return renderCollapse();else {\n      return React.createElement(\"h4\", {\n        className: \"pt-1\",\n        style: {\n          display: \"inline-block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, handleTitle());\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"unselectable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, renderTitle(), React.createElement(\"div\", {\n    className: props.collapse ? \"collapse\" : \"\",\n    id: props.collapse ? \"collapse\" + props.type + \"Queue\" : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(ViewToogleBtnGrp, {\n    num: getNumber(),\n    handleViewToogle: props.handleViewToogle,\n    theContentViewToogle: props.theContentViewToogle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: props.theContentViewToogle === \"list\" ? listViewStyle : gridViewStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, props.theContentViewToogle === \"list\" ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"text-white bg-dark sticky sticky-top sticky-top-2  container-fluid py-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row flex-nowrap\",\n    style: dynamicText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \" \\xA0\\xA0\\xA0\"), React.createElement(\"div\", {\n    className: \"col-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"GROUP\"), React.createElement(\"div\", {\n    className: \"col-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"NCR_N \"), React.createElement(\"span\", {\n    style: {\n      fontSize: \"0.6rem\"\n    },\n    className: \"badge badge-secondary align-text-top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"disc_n\")), React.createElement(\"div\", {\n    className: \"col-sm-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Q_TH\"), React.createElement(\"div\", {\n    className: \"col-sm-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"CML_QT_H\"), React.createElement(\"div\", {\n    className: \"col-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"PROD_SEQ\"), React.createElement(\"div\", {\n    className: \"col-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"PART_DESC\"), React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"USER \"), React.createElement(\"span\", {\n    style: {\n      fontSize: \"0.6rem\"\n    },\n    className: \"badge badge-secondary align-text-top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"id\"))))) : null, props.theRenderEvent)));\n}\n\nconst gridViewStyle = {\n  display: \"grid\",\n  gridTemplateColumns: \"repeat(auto-fill, minmax(190px, 1fr))\",\n  gridAutoRows: \"minmax(100px, auto)\",\n  gridGap: \"20px\"\n};\nconst listViewStyle = {};\nconst dynamicText = {\n  fontSize: \"0.70rem\",\n  fontWeight: \"bold\"\n};\nexport default EventList;","map":{"version":3,"sources":["/Users/ming/Documents/GitHub/MonitorSystem_React/src/components/event/EventList.js"],"names":["React","ViewToogleBtnGrp","EventList","props","handleTitle","type","theLength","getNumber","renderCollapse","renderTitle","collapse","display","handleViewToogle","theContentViewToogle","listViewStyle","gridViewStyle","dynamicText","fontSize","theRenderEvent","gridTemplateColumns","gridAutoRows","gridGap","fontWeight"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport ViewToogleBtnGrp from \"./ViewToogleBtnGrp\"\nfunction EventList(props) {\n  const handleTitle = () => {\n    if (props.type === \"general\") return <div>MAIN ({props.theLength})</div>\n    else if (props.type === \"possess\") return \"OWN\"\n    else if (props.type === \"track\") return \"TRACK\"\n  }\n  const getNumber = () => {\n    if (props.type === \"general\") return 1\n    else if (props.type === \"possess\") return 2\n    else if (props.type === \"track\") return 3\n  }\n  const renderCollapse = () => {\n    return (\n      <div\n        className=\"py-1 btn btn-lg  btn-outline-secondary\"\n        data-toggle=\"collapse\"\n        href={\"#collapse\" + props.type + \"Queue\"}\n        // aria-disabled={props.theLength === 0 ? true : false}\n        // style={props.theLength === 0 ? { color: \"gray\" } : { color: \"#0000cc\" }}\n      >\n        {handleTitle()}\n        {/* ({props.theLength}) */}\n      </div>\n    )\n  }\n  const renderTitle = () => {\n    if (props.collapse) return renderCollapse()\n    else {\n      return (\n        <h4 className=\"pt-1\" style={{ display: \"inline-block\" }}>\n          {handleTitle()}\n        </h4>\n      )\n    }\n  }\n\n  return (\n    <div className=\"unselectable\">\n      {renderTitle()}\n      <div\n        className={props.collapse ? \"collapse\" : \"\"}\n        id={props.collapse ? \"collapse\" + props.type + \"Queue\" : \"\"}\n      >\n        <ViewToogleBtnGrp\n          num={getNumber()}\n          handleViewToogle={props.handleViewToogle}\n          theContentViewToogle={props.theContentViewToogle}\n        ></ViewToogleBtnGrp>\n        <div\n          style={\n            props.theContentViewToogle === \"list\"\n              ? listViewStyle\n              : gridViewStyle\n          }\n        >\n          {/* LIST HEADER */}\n          {props.theContentViewToogle === \"list\" ? (\n            <span\n            // style={{\n            //   fontWeight: \"bold\"\n            // }}\n            // className=\"text-white bg-dark sticky-top sticky-top-2 \"\n            >\n              <div\n                className=\"text-white bg-dark sticky sticky-top sticky-top-2 \n              container-fluid py-2\"\n              >\n                <div className=\"row flex-nowrap\" style={dynamicText}>\n                  <span> &nbsp;&nbsp;&nbsp;</span>\n                  <div className=\"col-2\">GROUP</div>\n                  <div className=\"col-2\">\n                    <span>NCR_N </span>\n                    <span\n                      style={{ fontSize: \"0.6rem\" }}\n                      className=\"badge badge-secondary align-text-top\"\n                    >\n                      disc_n\n                    </span>\n                  </div>\n                  <div className=\"col-sm-1\">Q_TH</div>\n                  <div className=\"col-sm-1\">CML_QT_H</div>\n                  <div className=\"col-1\">PROD_SEQ</div>\n                  <div className=\"col-3\">PART_DESC</div>\n                  <div className=\"col\">\n                    <span>USER </span>\n                    <span\n                      style={{ fontSize: \"0.6rem\" }}\n                      className=\"badge badge-secondary align-text-top\"\n                    >\n                      id</span>\n                  </div>\n                </div>\n              </div>\n            </span>\n          ) : null}\n          {/* ^ LIST HEADER ^ */}\n          {/* RENDER EVENT */}\n          {props.theRenderEvent}\n        </div>\n      </div>\n    </div>\n  )\n}\nconst gridViewStyle = {\n  display: \"grid\",\n  gridTemplateColumns: \"repeat(auto-fill, minmax(190px, 1fr))\",\n  gridAutoRows: \"minmax(100px, auto)\",\n  gridGap: \"20px\"\n}\nconst listViewStyle = {}\nconst dynamicText = {\n  fontSize: \"0.70rem\",\n  fontWeight: \"bold\"\n}\nexport default EventList\n"]},"metadata":{},"sourceType":"module"}