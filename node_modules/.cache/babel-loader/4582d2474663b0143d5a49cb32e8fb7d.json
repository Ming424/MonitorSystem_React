{"ast":null,"code":"var _jsxFileName = \"/Users/ming/Documents/GitHub/MonitorSystem_React/src/components/sidebar/Group.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nfunction Group(props, index) {\n  const [localChecked, setLocalChecked] = useState(false); // const [chartChecked, setChartChecked] = useState(false)\n\n  const containerRef = useRef(null);\n  useEffect(() => {\n    if (props.group.isChecked) {\n      containerRef.current.checked = true;\n      setLocalChecked(true); // console.log(containerRef.current.checked)\n    } else {\n      containerRef.current.checked = false;\n      setLocalChecked(false);\n      props.group.isChartChecked = false; // console.log(containerRef.current.checked)\n    }\n  }, [props.group.isChartChecked, props.group.isChecked]);\n\n  const handleGroup = () => {\n    props.group.isChecked = !props.group.isChecked;\n    setLocalChecked(props.group.isChecked);\n    containerRef.current.checked = !containerRef.current.checked; // if (containerRef.current.checked === false) {\n    //   props.group.isChartChecked = false\n    // }\n    // console.log(\n    //   \"Group.handlegroup() => \" +\n    //     props.group.name +\n    //     \": \\nprops-\" +\n    //     props.group.isChecked +\n    //     \" | ref-\" +\n    //     containerRef.current.checked\n    // )\n\n    if (props.group.isChecked === false && props.checkAll === true) {\n      props.setCheckAll(false);\n    } else if (props.group.isChecked === true && props.checkAll === false) {\n      props.setCheckAll(false);\n    }\n  };\n\n  const handleGroupChart = () => {\n    // console.log(\"handleGroupChart() => \" + props.group.name)\n    props.group.isChartChecked = !props.group.isChartChecked; // console.log(props.group.isChartChecked)\n  };\n\n  return React.createElement(\"label\", {\n    className: \"list-group-item list-group-item-action py-2 border-bottom  m-0\",\n    style: textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: containerRef // checked={props.group.isChecked}\n    ,\n    type: \"checkbox\",\n    onClick: () => handleGroup(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), \"\\xA0\", props.group.name, \"\\xA0\", localChecked ? React.createElement(\"input\", {\n    // checked={props.group.isChecked}\n    type: \"checkbox\",\n    onClick: () => handleGroupChart(),\n    className: \"float-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }) : null);\n}\n\nconst textStyle = {\n  fontSize: \"0.9rem\"\n};\nexport default Group;","map":{"version":3,"sources":["/Users/ming/Documents/GitHub/MonitorSystem_React/src/components/sidebar/Group.js"],"names":["React","useEffect","useRef","useState","Group","props","index","localChecked","setLocalChecked","containerRef","group","isChecked","current","checked","isChartChecked","handleGroup","checkAll","setCheckAll","handleGroupChart","textStyle","name","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsBC,KAAtB,EAA6B;AAC3B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,KAAD,CAAhD,CAD2B,CAE3B;;AACA,QAAMM,YAAY,GAAGP,MAAM,CAAC,IAAD,CAA3B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,KAAK,CAACK,KAAN,CAAYC,SAAhB,EAA2B;AACzBF,MAAAA,YAAY,CAACG,OAAb,CAAqBC,OAArB,GAA+B,IAA/B;AACAL,MAAAA,eAAe,CAAC,IAAD,CAAf,CAFyB,CAGzB;AACD,KAJD,MAIO;AACLC,MAAAA,YAAY,CAACG,OAAb,CAAqBC,OAArB,GAA+B,KAA/B;AACAL,MAAAA,eAAe,CAAC,KAAD,CAAf;AACAH,MAAAA,KAAK,CAACK,KAAN,CAAYI,cAAZ,GAA6B,KAA7B,CAHK,CAIL;AACD;AACF,GAXQ,EAWN,CAACT,KAAK,CAACK,KAAN,CAAYI,cAAb,EAA6BT,KAAK,CAACK,KAAN,CAAYC,SAAzC,CAXM,CAAT;;AAaA,QAAMI,WAAW,GAAG,MAAM;AACxBV,IAAAA,KAAK,CAACK,KAAN,CAAYC,SAAZ,GAAwB,CAACN,KAAK,CAACK,KAAN,CAAYC,SAArC;AAEAH,IAAAA,eAAe,CAACH,KAAK,CAACK,KAAN,CAAYC,SAAb,CAAf;AACAF,IAAAA,YAAY,CAACG,OAAb,CAAqBC,OAArB,GAA+B,CAACJ,YAAY,CAACG,OAAb,CAAqBC,OAArD,CAJwB,CAKxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAIR,KAAK,CAACK,KAAN,CAAYC,SAAZ,KAA0B,KAA1B,IAAmCN,KAAK,CAACW,QAAN,KAAmB,IAA1D,EAAgE;AAC9DX,MAAAA,KAAK,CAACY,WAAN,CAAkB,KAAlB;AACD,KAFD,MAEO,IAAIZ,KAAK,CAACK,KAAN,CAAYC,SAAZ,KAA0B,IAA1B,IAAkCN,KAAK,CAACW,QAAN,KAAmB,KAAzD,EAAgE;AACrEX,MAAAA,KAAK,CAACY,WAAN,CAAkB,KAAlB;AACD;AACF,GArBD;;AAsBA,QAAMC,gBAAgB,GAAG,MAAM;AAC7B;AACAb,IAAAA,KAAK,CAACK,KAAN,CAAYI,cAAZ,GAA6B,CAACT,KAAK,CAACK,KAAN,CAAYI,cAA1C,CAF6B,CAG7B;AACD,GAJD;;AAKA,SACE;AACE,IAAA,SAAS,EAAC,gEADZ;AAEE,IAAA,KAAK,EAAEK,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AACE,IAAA,GAAG,EAAEV,YADP,CAEE;AAFF;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,OAAO,EAAE,MAAMM,WAAW,EAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,UAUSV,KAAK,CAACK,KAAN,CAAYU,IAVrB,UAWGb,YAAY,GACX;AACE;AACA,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,OAAO,EAAE,MAAMW,gBAAgB,EAHjC;AAIE,IAAA,SAAS,EAAC,aAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADW,GAOT,IAlBN,CADF;AAsBD;;AAED,MAAMC,SAAS,GAAG;AAChBE,EAAAA,QAAQ,EAAE;AADM,CAAlB;AAIA,eAAejB,KAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\"\n\nfunction Group(props, index) {\n  const [localChecked, setLocalChecked] = useState(false)\n  // const [chartChecked, setChartChecked] = useState(false)\n  const containerRef = useRef(null)\n\n  useEffect(() => {\n    if (props.group.isChecked) {\n      containerRef.current.checked = true\n      setLocalChecked(true)\n      // console.log(containerRef.current.checked)\n    } else {\n      containerRef.current.checked = false\n      setLocalChecked(false)\n      props.group.isChartChecked = false\n      // console.log(containerRef.current.checked)\n    }\n  }, [props.group.isChartChecked, props.group.isChecked])\n\n  const handleGroup = () => {\n    props.group.isChecked = !props.group.isChecked\n\n    setLocalChecked(props.group.isChecked)\n    containerRef.current.checked = !containerRef.current.checked\n    // if (containerRef.current.checked === false) {\n    //   props.group.isChartChecked = false\n    // }\n    // console.log(\n    //   \"Group.handlegroup() => \" +\n    //     props.group.name +\n    //     \": \\nprops-\" +\n    //     props.group.isChecked +\n    //     \" | ref-\" +\n    //     containerRef.current.checked\n    // )\n    if (props.group.isChecked === false && props.checkAll === true) {\n      props.setCheckAll(false)\n    } else if (props.group.isChecked === true && props.checkAll === false) {\n      props.setCheckAll(false)\n    }\n  }\n  const handleGroupChart = () => {\n    // console.log(\"handleGroupChart() => \" + props.group.name)\n    props.group.isChartChecked = !props.group.isChartChecked\n    // console.log(props.group.isChartChecked)\n  }\n  return (\n    <label\n      className=\"list-group-item list-group-item-action py-2 border-bottom  m-0\"\n      style={textStyle}\n    >\n      <input\n        ref={containerRef}\n        // checked={props.group.isChecked}\n        type=\"checkbox\"\n        onClick={() => handleGroup()}\n      />\n      &nbsp;{props.group.name}&nbsp;\n      {localChecked ? (\n        <input\n          // checked={props.group.isChecked}\n          type=\"checkbox\"\n          onClick={() => handleGroupChart()}\n          className=\"float-right\"\n        ></input>\n      ) : null}\n    </label>\n  )\n}\n\nconst textStyle = {\n  fontSize: \"0.9rem\"\n}\n\nexport default Group\n"]},"metadata":{},"sourceType":"module"}