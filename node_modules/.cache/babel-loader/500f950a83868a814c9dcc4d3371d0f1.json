{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport axios from \"axios\"; // https://stackoverflow.com/questions/6806263/websocket-api-to-replace-rest-api\n// https://stackoverflow.com/questions/28613399/websocket-vs-rest-api-for-real-time-data\n\nfunction Fetch(props) {\n  // const groups_array = [\"F7ENGM&P\", \"F7ENGSTRUC\"]\n\n  /** AXIOS AJAX */\n  //  Discussion thread: https://github.com/axios/axios/issues/1195\n  //  Documentation: https://facebook.github.io/react-native/docs/network\n  // const url = \"../BD500ENKG_LEQMon.php\" // original file that always work\n  const url = \"../src/api/category/read.php\";\n  useEffect(() => {\n    let id = setInterval(() => {\n      if (props.checkedGroup) {\n        const fetchData = async () => {\n          axios.post(url, props.checkedGroup).then(response => {\n            // console.log(\"====  0- Data sent ============================\\n\")\n            // console.log(props.checkedGroup)\n            // console.log(\"==== 1- RESPONSE => ============================\\n\")\n            // console.log(response)\n            // console.log(\"==== 2- RESPONSE.DATA => =======================\\n\")\n            // console.log(response.data)\n            // console.log(\"==== 3- RESPONSE.DATA.DATA => ==================\\n\")\n            // console.log(response.data.data)\n\n            /** Throw error for unexpected result fetched */\n            if (!response.data.data) {\n              throw new Error(\"[response.data.data] is \" + response.data.data);\n            }\n            /** Update the data onto state */\n\n\n            props.setEvents(response.data.data); // console.log(\"\\n>>>>>>>>>>>-> SUCCESS (Fetch.js) <-<<<<<<<<<<<<\\n\\n\\n\")\n          }).catch(error => {// console.log(error)\n            // props.setEvents([])\n            // console.log(\n            //   \"\\n>>>>>>>>>>>->  FAILED (Fetch.js)  <-<<<<<<<<<<<<\\n\\n\\n\"\n            // )\n          });\n        };\n\n        fetchData();\n      } else {// console.log(\"[RUNNABLE] No selected group\")\n      }\n    }, 1500);\n    return () => clearInterval(id);\n  }, [props]);\n  return React.createElement(React.Fragment, null, \" \");\n}\n\nexport default Fetch;","map":{"version":3,"sources":["/Users/ming/Documents/GitHub/v0.1.0/src/functionnality/Fetch.js"],"names":["React","useEffect","axios","Fetch","props","url","id","setInterval","checkedGroup","fetchData","post","then","response","data","Error","setEvents","catch","error","clearInterval"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB;;AAEA;AACA;AACA;AAEA;AACA,QAAMC,GAAG,GAAG,8BAAZ;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,EAAE,GAAGC,WAAW,CAAC,MAAM;AACzB,UAAIH,KAAK,CAACI,YAAV,EAAwB;AACtB,cAAMC,SAAS,GAAG,YAAY;AAC5BP,UAAAA,KAAK,CACFQ,IADH,CACQL,GADR,EACaD,KAAK,CAACI,YADnB,EAEGG,IAFH,CAEQC,QAAQ,IAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAI,CAACA,QAAQ,CAACC,IAAT,CAAcA,IAAnB,EAAyB;AACvB,oBAAM,IAAIC,KAAJ,CAAU,6BAA6BF,QAAQ,CAACC,IAAT,CAAcA,IAArD,CAAN;AACD;AACD;;;AACAT,YAAAA,KAAK,CAACW,SAAN,CAAgBH,QAAQ,CAACC,IAAT,CAAcA,IAA9B,EAfgB,CAgBhB;AACD,WAnBH,EAoBGG,KApBH,CAoBSC,KAAK,IAAI,CACd;AACA;AACA;AACA;AACA;AACD,WA1BH;AA2BD,SA5BD;;AA8BAR,QAAAA,SAAS;AACV,OAhCD,MAgCO,CACL;AACD;AACF,KApCmB,EAoCjB,IApCiB,CAApB;AAqCA,WAAO,MAAMS,aAAa,CAACZ,EAAD,CAA1B;AACD,GAvCQ,EAuCN,CAACF,KAAD,CAvCM,CAAT;AAyCA,SAAO,8CAAP;AACD;;AACD,eAAeD,KAAf","sourcesContent":["import React, { useEffect } from \"react\"\nimport axios from \"axios\"\n\n// https://stackoverflow.com/questions/6806263/websocket-api-to-replace-rest-api\n// https://stackoverflow.com/questions/28613399/websocket-vs-rest-api-for-real-time-data\n\nfunction Fetch(props) {\n  // const groups_array = [\"F7ENGM&P\", \"F7ENGSTRUC\"]\n\n  /** AXIOS AJAX */\n  //  Discussion thread: https://github.com/axios/axios/issues/1195\n  //  Documentation: https://facebook.github.io/react-native/docs/network\n\n  // const url = \"../BD500ENKG_LEQMon.php\" // original file that always work\n  const url = \"../src/api/category/read.php\"\n\n  useEffect(() => {\n    let id = setInterval(() => {\n      if (props.checkedGroup) {\n        const fetchData = async () => {\n          axios\n            .post(url, props.checkedGroup)\n            .then(response => {\n              // console.log(\"====  0- Data sent ============================\\n\")\n              // console.log(props.checkedGroup)\n              // console.log(\"==== 1- RESPONSE => ============================\\n\")\n              // console.log(response)\n              // console.log(\"==== 2- RESPONSE.DATA => =======================\\n\")\n              // console.log(response.data)\n              // console.log(\"==== 3- RESPONSE.DATA.DATA => ==================\\n\")\n              // console.log(response.data.data)\n\n              /** Throw error for unexpected result fetched */\n              if (!response.data.data) {\n                throw new Error(\"[response.data.data] is \" + response.data.data)\n              }\n              /** Update the data onto state */\n              props.setEvents(response.data.data)\n              // console.log(\"\\n>>>>>>>>>>>-> SUCCESS (Fetch.js) <-<<<<<<<<<<<<\\n\\n\\n\")\n            })\n            .catch(error => {\n              // console.log(error)\n              // props.setEvents([])\n              // console.log(\n              //   \"\\n>>>>>>>>>>>->  FAILED (Fetch.js)  <-<<<<<<<<<<<<\\n\\n\\n\"\n              // )\n            })\n        }\n\n        fetchData()\n      } else {\n        // console.log(\"[RUNNABLE] No selected group\")\n      }\n    }, 1500)\n    return () => clearInterval(id)\n  }, [props])\n\n  return <> </>\n}\nexport default Fetch\n"]},"metadata":{},"sourceType":"module"}