{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ming/Documents/GitHub/Monitor/node_modules/@babel/runtime/regenerator\";import React,{useEffect}from\"react\";import axios from\"axios\";// https://stackoverflow.com/questions/6806263/websocket-api-to-replace-rest-api\n// https://stackoverflow.com/questions/28613399/websocket-vs-rest-api-for-real-time-data\nfunction Fetch(props){// const groups_array = [\"F7ENGM&P\", \"F7ENGSTRUC\"]\n/** AXIOS AJAX */ //  Discussion thread: https://github.com/axios/axios/issues/1195\n//  Documentation: https://facebook.github.io/react-native/docs/network\n// const url = \"../BD500ENKG_LEQMon.php\" // original file that always work\nvar url=\"../src/api/category/read.php\";useEffect(function(){var id=setInterval(function(){if(props.checkedGroup){var fetchData=function fetchData(){return _regeneratorRuntime.async(function fetchData$(_context){while(1){switch(_context.prev=_context.next){case 0:axios.post(url,props.checkedGroup).then(function(response){// console.log(\"====  0- Data sent ============================\\n\")\n// console.log(props.checkedGroup)\n// console.log(\"==== 1- RESPONSE => ============================\\n\")\n// console.log(response)\n// console.log(\"==== 2- RESPONSE.DATA => =======================\\n\")\n// console.log(response.data)\n// console.log(\"==== 3- RESPONSE.DATA.DATA => ==================\\n\")\n// console.log(response.data.data)\n/** Throw error for unexpected result fetched */if(!response.data.data){throw new Error(\"[response.data.data] is \"+response.data.data);}/** Update the data onto state */props.setEvents(response.data.data);// console.log(\"\\n>>>>>>>>>>>-> SUCCESS (Fetch.js) <-<<<<<<<<<<<<\\n\\n\\n\")\n}).catch(function(error){// console.log(error)\n// props.setEvents([])\n// console.log(\n//   \"\\n>>>>>>>>>>>->  FAILED (Fetch.js)  <-<<<<<<<<<<<<\\n\\n\\n\"\n// )\n});case 1:case\"end\":return _context.stop();}}});};fetchData();}else{// console.log(\"[RUNNABLE] No selected group\")\n}},1500);return function(){return clearInterval(id);};},[props]);return React.createElement(React.Fragment,null,\" \");}export default Fetch;","map":{"version":3,"sources":["/Users/ming/Documents/GitHub/Monitor/src/functionnality/Fetch.js"],"names":["React","useEffect","axios","Fetch","props","url","id","setInterval","checkedGroup","fetchData","post","then","response","data","Error","setEvents","catch","error","clearInterval"],"mappings":"8GAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA;AAEA,QAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsB,CACpB;AAEA,iBAHoB,CAIpB;AACA;AAEA;AACA,GAAMC,CAAAA,GAAG,CAAG,8BAAZ,CAEAJ,SAAS,CAAC,UAAM,CACd,GAAIK,CAAAA,EAAE,CAAGC,WAAW,CAAC,UAAM,CACzB,GAAIH,KAAK,CAACI,YAAV,CAAwB,CACtB,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,sHAChBP,KAAK,CACFQ,IADH,CACQL,GADR,CACaD,KAAK,CAACI,YADnB,EAEGG,IAFH,CAEQ,SAAAC,QAAQ,CAAI,CAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,gDACA,GAAI,CAACA,QAAQ,CAACC,IAAT,CAAcA,IAAnB,CAAyB,CACvB,KAAM,IAAIC,CAAAA,KAAJ,CAAU,2BAA6BF,QAAQ,CAACC,IAAT,CAAcA,IAArD,CAAN,CACD,CACD,iCACAT,KAAK,CAACW,SAAN,CAAgBH,QAAQ,CAACC,IAAT,CAAcA,IAA9B,EACA;AACD,CAnBH,EAoBGG,KApBH,CAoBS,SAAAC,KAAK,CAAI,CACd;AACA;AACA;AACA;AACA;AACD,CA1BH,EADgB,8CAAlB,CA8BAR,SAAS,GACV,CAhCD,IAgCO,CACL;AACD,CACF,CApCmB,CAoCjB,IApCiB,CAApB,CAqCA,MAAO,kBAAMS,CAAAA,aAAa,CAACZ,EAAD,CAAnB,EAAP,CACD,CAvCQ,CAuCN,CAACF,KAAD,CAvCM,CAAT,CAyCA,MAAO,6CAAP,CACD,CACD,cAAeD,CAAAA,KAAf","sourcesContent":["import React, { useEffect } from \"react\"\nimport axios from \"axios\"\n\n// https://stackoverflow.com/questions/6806263/websocket-api-to-replace-rest-api\n// https://stackoverflow.com/questions/28613399/websocket-vs-rest-api-for-real-time-data\n\nfunction Fetch(props) {\n  // const groups_array = [\"F7ENGM&P\", \"F7ENGSTRUC\"]\n\n  /** AXIOS AJAX */\n  //  Discussion thread: https://github.com/axios/axios/issues/1195\n  //  Documentation: https://facebook.github.io/react-native/docs/network\n\n  // const url = \"../BD500ENKG_LEQMon.php\" // original file that always work\n  const url = \"../src/api/category/read.php\"\n\n  useEffect(() => {\n    let id = setInterval(() => {\n      if (props.checkedGroup) {\n        const fetchData = async () => {\n          axios\n            .post(url, props.checkedGroup)\n            .then(response => {\n              // console.log(\"====  0- Data sent ============================\\n\")\n              // console.log(props.checkedGroup)\n              // console.log(\"==== 1- RESPONSE => ============================\\n\")\n              // console.log(response)\n              // console.log(\"==== 2- RESPONSE.DATA => =======================\\n\")\n              // console.log(response.data)\n              // console.log(\"==== 3- RESPONSE.DATA.DATA => ==================\\n\")\n              // console.log(response.data.data)\n\n              /** Throw error for unexpected result fetched */\n              if (!response.data.data) {\n                throw new Error(\"[response.data.data] is \" + response.data.data)\n              }\n              /** Update the data onto state */\n              props.setEvents(response.data.data)\n              // console.log(\"\\n>>>>>>>>>>>-> SUCCESS (Fetch.js) <-<<<<<<<<<<<<\\n\\n\\n\")\n            })\n            .catch(error => {\n              // console.log(error)\n              // props.setEvents([])\n              // console.log(\n              //   \"\\n>>>>>>>>>>>->  FAILED (Fetch.js)  <-<<<<<<<<<<<<\\n\\n\\n\"\n              // )\n            })\n        }\n\n        fetchData()\n      } else {\n        // console.log(\"[RUNNABLE] No selected group\")\n      }\n    }, 1500)\n    return () => clearInterval(id)\n  }, [props])\n\n  return <> </>\n}\nexport default Fetch\n"]},"metadata":{},"sourceType":"module"}