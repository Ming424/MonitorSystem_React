{"ast":null,"code":"import _slicedToArray from\"/Users/ming/Documents/GitHub/Monitor/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from\"react\";function Group(props,index){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),localChecked=_useState2[0],setLocalChecked=_useState2[1];// const [chartChecked, setChartChecked] = useState(false)\nvar containerRef=useRef(null);useEffect(function(){if(props.group.isChecked){containerRef.current.checked=true;setLocalChecked(true);// console.log(containerRef.current.checked)\n}else{containerRef.current.checked=false;setLocalChecked(false);props.group.isChartChecked=false;// console.log(containerRef.current.checked)\n}},[props.group.isChartChecked,props.group.isChecked]);var handleGroup=function handleGroup(){props.group.isChecked=!props.group.isChecked;setLocalChecked(props.group.isChecked);containerRef.current.checked=!containerRef.current.checked;// if (containerRef.current.checked === false) {\n//   props.group.isChartChecked = false\n// }\n// console.log(\n//   \"Group.handlegroup() => \" +\n//     props.group.name +\n//     \": \\nprops-\" +\n//     props.group.isChecked +\n//     \" | ref-\" +\n//     containerRef.current.checked\n// )\nif(props.group.isChecked===false&&props.checkAll===true){props.setCheckAll(false);}else if(props.group.isChecked===true&&props.checkAll===false){props.setCheckAll(false);}};var handleGroupChart=function handleGroupChart(){// console.log(\"handleGroupChart() => \" + props.group.name)\nprops.group.isChartChecked=!props.group.isChartChecked;// console.log(props.group.isChartChecked)\n};return React.createElement(\"label\",{className:\"list-group-item list-group-item-action py-2 border-bottom  m-0\",style:textStyle},React.createElement(\"input\",{ref:containerRef// checked={props.group.isChecked}\n,type:\"checkbox\",onClick:function onClick(){return handleGroup();}}),\"\\xA0\",props.group.name,\"\\xA0\",localChecked?React.createElement(\"input\",{// checked={props.group.isChecked}\ntype:\"checkbox\",onClick:function onClick(){return handleGroupChart();},className:\"float-right\"}):null);}var textStyle={fontSize:\"0.9rem\"};export default Group;","map":{"version":3,"sources":["/Users/ming/Documents/GitHub/Monitor/src/components/sidebar/Group.js"],"names":["React","useEffect","useRef","useState","Group","props","index","localChecked","setLocalChecked","containerRef","group","isChecked","current","checked","isChartChecked","handleGroup","checkAll","setCheckAll","handleGroupChart","textStyle","name","fontSize"],"mappings":"uHAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,CAAmCC,QAAnC,KAAmD,OAAnD,CAEA,QAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsBC,KAAtB,CAA6B,eACaH,QAAQ,CAAC,KAAD,CADrB,wCACpBI,YADoB,eACNC,eADM,eAE3B;AACA,GAAMC,CAAAA,YAAY,CAAGP,MAAM,CAAC,IAAD,CAA3B,CAEAD,SAAS,CAAC,UAAM,CACd,GAAII,KAAK,CAACK,KAAN,CAAYC,SAAhB,CAA2B,CACzBF,YAAY,CAACG,OAAb,CAAqBC,OAArB,CAA+B,IAA/B,CACAL,eAAe,CAAC,IAAD,CAAf,CACA;AACD,CAJD,IAIO,CACLC,YAAY,CAACG,OAAb,CAAqBC,OAArB,CAA+B,KAA/B,CACAL,eAAe,CAAC,KAAD,CAAf,CACAH,KAAK,CAACK,KAAN,CAAYI,cAAZ,CAA6B,KAA7B,CACA;AACD,CACF,CAXQ,CAWN,CAACT,KAAK,CAACK,KAAN,CAAYI,cAAb,CAA6BT,KAAK,CAACK,KAAN,CAAYC,SAAzC,CAXM,CAAT,CAaA,GAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBV,KAAK,CAACK,KAAN,CAAYC,SAAZ,CAAwB,CAACN,KAAK,CAACK,KAAN,CAAYC,SAArC,CAEAH,eAAe,CAACH,KAAK,CAACK,KAAN,CAAYC,SAAb,CAAf,CACAF,YAAY,CAACG,OAAb,CAAqBC,OAArB,CAA+B,CAACJ,YAAY,CAACG,OAAb,CAAqBC,OAArD,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAIR,KAAK,CAACK,KAAN,CAAYC,SAAZ,GAA0B,KAA1B,EAAmCN,KAAK,CAACW,QAAN,GAAmB,IAA1D,CAAgE,CAC9DX,KAAK,CAACY,WAAN,CAAkB,KAAlB,EACD,CAFD,IAEO,IAAIZ,KAAK,CAACK,KAAN,CAAYC,SAAZ,GAA0B,IAA1B,EAAkCN,KAAK,CAACW,QAAN,GAAmB,KAAzD,CAAgE,CACrEX,KAAK,CAACY,WAAN,CAAkB,KAAlB,EACD,CACF,CArBD,CAsBA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7B;AACAb,KAAK,CAACK,KAAN,CAAYI,cAAZ,CAA6B,CAACT,KAAK,CAACK,KAAN,CAAYI,cAA1C,CACA;AACD,CAJD,CAKA,MACE,8BACE,SAAS,CAAC,gEADZ,CAEE,KAAK,CAAEK,SAFT,EAIE,6BACE,GAAG,CAAEV,YACL;AAFF,CAGE,IAAI,CAAC,UAHP,CAIE,OAAO,CAAE,yBAAMM,CAAAA,WAAW,EAAjB,EAJX,EAJF,QAUSV,KAAK,CAACK,KAAN,CAAYU,IAVrB,QAWGb,YAAY,CACX,6BACE;AACA,IAAI,CAAC,UAFP,CAGE,OAAO,CAAE,yBAAMW,CAAAA,gBAAgB,EAAtB,EAHX,CAIE,SAAS,CAAC,aAJZ,EADW,CAOT,IAlBN,CADF,CAsBD,CAED,GAAMC,CAAAA,SAAS,CAAG,CAChBE,QAAQ,CAAE,QADM,CAAlB,CAIA,cAAejB,CAAAA,KAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\"\n\nfunction Group(props, index) {\n  const [localChecked, setLocalChecked] = useState(false)\n  // const [chartChecked, setChartChecked] = useState(false)\n  const containerRef = useRef(null)\n\n  useEffect(() => {\n    if (props.group.isChecked) {\n      containerRef.current.checked = true\n      setLocalChecked(true)\n      // console.log(containerRef.current.checked)\n    } else {\n      containerRef.current.checked = false\n      setLocalChecked(false)\n      props.group.isChartChecked = false\n      // console.log(containerRef.current.checked)\n    }\n  }, [props.group.isChartChecked, props.group.isChecked])\n\n  const handleGroup = () => {\n    props.group.isChecked = !props.group.isChecked\n\n    setLocalChecked(props.group.isChecked)\n    containerRef.current.checked = !containerRef.current.checked\n    // if (containerRef.current.checked === false) {\n    //   props.group.isChartChecked = false\n    // }\n    // console.log(\n    //   \"Group.handlegroup() => \" +\n    //     props.group.name +\n    //     \": \\nprops-\" +\n    //     props.group.isChecked +\n    //     \" | ref-\" +\n    //     containerRef.current.checked\n    // )\n    if (props.group.isChecked === false && props.checkAll === true) {\n      props.setCheckAll(false)\n    } else if (props.group.isChecked === true && props.checkAll === false) {\n      props.setCheckAll(false)\n    }\n  }\n  const handleGroupChart = () => {\n    // console.log(\"handleGroupChart() => \" + props.group.name)\n    props.group.isChartChecked = !props.group.isChartChecked\n    // console.log(props.group.isChartChecked)\n  }\n  return (\n    <label\n      className=\"list-group-item list-group-item-action py-2 border-bottom  m-0\"\n      style={textStyle}\n    >\n      <input\n        ref={containerRef}\n        // checked={props.group.isChecked}\n        type=\"checkbox\"\n        onClick={() => handleGroup()}\n      />\n      &nbsp;{props.group.name}&nbsp;\n      {localChecked ? (\n        <input\n          // checked={props.group.isChecked}\n          type=\"checkbox\"\n          onClick={() => handleGroupChart()}\n          className=\"float-right\"\n        ></input>\n      ) : null}\n    </label>\n  )\n}\n\nconst textStyle = {\n  fontSize: \"0.9rem\"\n}\n\nexport default Group\n"]},"metadata":{},"sourceType":"module"}